<script src="http://code.jquery.com/jquery-1.11.0.min.js"></script>
<script src="http://code.jquery.com/jquery-migrate-1.2.1.min.js"></script>
<script src="http://code.highcharts.com/stock/highstock.js"></script>
<script src="http://code.highcharts.com/stock/modules/exporting.js"></script>

<div id="container" style="height: 500px; min-width: 500px"></div>
<button id="Uncorrected">Raw Data</button>
<button id="CorrPress">Corrected for Pressure</button>

<script> 
$(function() {
	var chart;
    $.getJSON('http://localhost/apiv1/CALM/nmdb/CALM_ori/allHS/'+N_points+'?callback=?', function(data) {         
		data = [].concat(data, [[Date.now(), null, null, null, null]]);

        // Create a timer
        var start = + new Date();
    
        // Create the chart
        chart = new Highcharts.StockChart({
            chart: {
                renderTo: 'container',
                events: {
                    load: function(chart) {
                        this.setTitle(null, {
                            text: 'Built chart at '+ (new Date() - start) +'ms'
                        });
                    }
                },
                zoomType: 'x'
            },
    
            rangeSelector: {
                buttons: [{
                    type: 'all',
                    text: 'All'
                }],
                selected: 0
            },
    
           
    
            title: {
                text: 'Hi there Spikes'
            },
    
            subtitle: {
                text: 'Built chart at...' // dummy text to reserve space for dynamic subtitle
            },
            
			xAxis : {
				events : {
					afterSetExtremes : afterSetExtremes
				},
				minRange: 2*N_points/*one Min*/*60*1000,
			},

			navigator : {
				adaptToUpdatedData: false,
				series : {
					data : data
				}
			},

			yAxis : {
				min: 20,
				max: 255
			},

			plotOptions: {
                column: {
                    pointPadding: 0.2,
                    borderWidth: 0
                }
            },

            series:  [{
				name : 'Uncorrected',
				type : 'candlestick',
				data : data,
				dataGrouping: {
					enabled: false
				}
			},{
				name : 'Uncorrected',
				data : null,
				dataGrouping: {
					enabled: false
				}
			},{
				name : 'Corrected for Pressure',
				type : 'candlestick',
				visible : false,
				data : null,
				dataGrouping: {
					enabled: false
				}
			},{
				name : 'Corrected for Pressure',
				visible : false,
				data : null,
				dataGrouping: {
					enabled: false
				}
			}]
    
        });
   });

	var IsUncorrected = true;
    $('#Uncorrected').click(function() {
        IsUncorrected = !IsUncorrected;
		if (IsUncorrected){
			chart.series[0].show();
			chart.series[1].show();
		}else{
			chart.series[0].hide();
			chart.series[1].hide();
		}
    });

	var IsCorrPress = false;
    $('#CorrPress').click(function() {
		IsCorrPress = !IsCorrPress;		
		if (IsCorrPress){
			chart.series[2].show();
			chart.series[3].show();
		}else{
			chart.series[2].hide();
			chart.series[3].hide();
		}
    });

});
/////////////////////////
///Vars//////////////////
var N_points=500;
///Vars//////////////////
/////////////////////////

function afterSetExtremes(e) {

	//alert('Maximo: '+e.max+' Minimo: '+e.min);
	var currentExtremes = this.getExtremes(),
		range = e.max - e.min,
		chart = $('#container').highcharts();


	chart.showLoading('Loading data from server...');
	if ((Math.round(e.max/1000)-Math.round(e.min/1000))/60<=N_points*2){	
		$.getJSON('http://localhost/apiv1/CALM/nmdb/CALM_ori/intervalHS/'+Math.round(e.min/1000)+'/'+Math.round(e.max/1000)+'/'+N_points+'?callback=?', function(data) {
		
			chart.series[0].setData(null);
			chart.series[1].setData(data[0]);
			chart.series[2].setData(null);
			chart.series[3].setData(data[1]);

			chart.hideLoading();
		});
	}else{
		$.getJSON('http://localhost/apiv1/CALM/nmdb/CALM_ori/intervalHSGrouped/'+Math.round(e.min/1000)+'/'+Math.round(e.max/1000)+'/'+N_points+'?callback=?', function(data) {
		
			chart.series[0].setData(data[0]);
			chart.series[1].setData(null);
			chart.series[2].setData(data[1]);
			chart.series[3].setData(null);

			chart.hideLoading();
		});
	}	
}
</script>
