<script src="http://code.jquery.com/jquery-1.11.0.min.js"></script>
<script src="http://code.jquery.com/jquery-migrate-1.2.1.min.js"></script>
<script src="http://code.highcharts.com/stock/highstock.js"></script>
<script src="http://code.highcharts.com/stock/modules/exporting.js"></script>

<div id="container" style="height: 500px; min-width: 500px"></div>
<div id="container2" style="height: 500px; min-width: 500px"></div>

<script> 
$(function() {

	//$.getJSON('http://localhost/apiv1/CALM/nmdadb/binTable/aux?callback=?', function(data) {
    $.getJSON('http://localhost/apiv1/CALM/nmdb/CALM_ori/allHS/'+N_points+'?callback=?', function(data) {         
    

		data = [].concat(data, [[Date.now(), null, null, null, null]]);

        // Create a timer
        var start = + new Date();
    
        // Create the chart
        var chart = new Highcharts.StockChart({
            chart: {
                renderTo: 'container',
                events: {
                    load: function(chart) {
                        this.setTitle(null, {
                            text: 'Built chart at '+ (new Date() - start) +'ms'
                        });
                    }
                },
                zoomType: 'x'
            },
    
            /*rangeSelector: {
                buttons: [{
                    type: 'all',
                    text: 'All'
                }],
                selected: 0
            },*/
    
           
    
            title: {
                text: 'Hi there Spikes'
            },
    
            subtitle: {
                text: 'Built chart at...' // dummy text to reserve space for dynamic subtitle
            },
            
			xAxis : {
				events : {
					afterSetExtremes : afterSetExtremes
				},
				minRange: 2*N_points/*one Min*/*60*1000,
			},

			navigator : {
				adaptToUpdatedData: false,
				series : {
					data : data
				}
			},

			yAxis : {
				min: 20,
				max: 255
			},

			legend : {
				enabled: true
			},

			/*plotOptions :{
				series : {
					dataGrouping : {
						groupPixelWidth : 1,
						//enabled : false,
						smoothed : true,
						units: [
							['millisecond',[1, 2, 5, 10, 20, 25, 50, 100, 200, 500]], 
							['second',[1, 2, 5, 10, 15, 30]],
							['minute',[10, 15, 30]], 
							['hour',[1, 2, 3, 4, 6, 8, 12]], 
							['day',[1]], 
							['week',[1]], 
							['month',[1, 3, 6]], 
							['year',null]http://www.highcharts.com/samples/data/from-sql.php?start='+ Math.round(e.min) +
			'&end='+ Math.round(e.max) +'&callback=?
						]
					}
				}
			},*/

            series:  [{
				type : 'candlestick',
				data : data,
				dataGrouping: {
					enabled: false
				}
			},{
				data : data,
				visible: false,
				dataGrouping: {
					enabled: false
				}
			}]
    
        });
   });
});

var N_points=300;


function afterSetExtremes(e) {

	//alert('Maximo: '+e.max+' Minimo: '+e.min);
	var currentExtremes = this.getExtremes(),
		range = e.max - e.min,
		chart = $('#container').highcharts();


	chart.showLoading('Loading data from server...');
	if ((Math.round(e.max/1000)-Math.round(e.min/1000))/60<=N_points*2){	
		$.getJSON('http://localhost/apiv1/CALM/nmdb/CALM_ori/intervalHS/'+Math.round(e.min/1000)+'/'+Math.round(e.max/1000)+'/'+N_points+'?callback=?', function(data) {
		
			//chart.series[0].setData(data);
			chart.series[1].setData(data);

			chart.series[0].hide();			
			chart.series[1].show();

			chart.hideLoading();
		});
	}else{
		$.getJSON('http://localhost/apiv1/CALM/nmdb/CALM_ori/intervalHSGrouped/'+Math.round(e.min/1000)+'/'+Math.round(e.max/1000)+'/'+N_points+'?callback=?', function(data) {
		
			chart.series[0].setData(data);
			//chart.series[1].setData(data);

			chart.series[1].hide();			
			chart.series[0].show();

			chart.hideLoading();
		});
	}
		
	//alert(''+Math.round(e.min/1000));

	/*chart.showLoading('Loading data from server...');
	$.getJSON('http://localhost/apiv1/CALM/nmdb/CALM_ori/intervalHS/'+Math.round(e.min/1000)+'/'+Math.round(e.max/1000)+'/'+N_points+'?callback=?', function(data) {
		
		chart.series[0].setData(data);
		chart.series[1].setData(data);
		if((Math.round(e.max/1000)-Math.round(e.min/1000))/60<=N_points){
			chart.series[0].hide();			
			chart.series[1].show();
		}else{
			chart.series[1].hide();			
			chart.series[0].show();
		}
		chart.hideLoading();
	});*/
	
}
</script>
