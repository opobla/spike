/*
 * File: app/controller/Spike.js
 *
 * This file was generated by Sencha Architect
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.controller.Spike', {
    extend: 'Ext.app.Controller',

    refs: [
        {
            ref: 'SpikeChartPanel',
            selector: '#SpikeChartPanel'
        },
        {
            ref: 'SpikeChart2Panel',
            selector: '#SpikeChart2Panel'
        }
    ],

    onLaunch: function() {
        this.doLoadData();
    },

    doLoadData: function() {
        var panel=this.getSpikeChartPanel();
        MyApp.app.N_points=Math.round(panel.getWidth()/4);

        var N_points=MyApp.app.N_points;

        Ext.Ajax.request({
            url: 'http://localhost/apiv1/CALM/nmdb/CALM_ori/allHS/'+ N_points,
            success: function(response){
                var text = response.responseText;
                data=Ext.JSON.decode(text);
                data[0] = [].concat(data[0], [[Date.now(), null, null, null, null]]);
                MyApp.app.data=data;
                this.onDataLoaded(data);

            },
            scope: this
        });
    },

    onDataLoaded: function(data) {
        var panel=this.getSpikeChartPanel();
        var panel2=this.getSpikeChart2Panel();

        var N_points=MyApp.app.N_points;

        var chart = new Highcharts.StockChart({
                    chart: {
                        renderTo: panel.getEl().dom,

                        zoomType: 'x'
                    },

                    global: {
                        useUTC: true
                    },

                    rangeSelector: {
                        buttons: [{
                            type: 'month',
                            count: 1,
                            text: '1m'
                        },{
                            type: 'all',
                            text: 'All'
                        }],
                        selected: 1,
        				inputEnabled: false
                    },

        			xAxis : {
        				events : {
                            afterSetExtremes : function(event){
                                chart.showLoading('Loading data from server...');

                                if ((Math.round(event.max/1000)-Math.round(event.min/1000))/60<=N_points*4+4){
                                    Ext.Ajax.request({
                                        url: 'http://localhost/apiv1/CALM/nmdb/CALM_ori/intervalHS/'+Math.round(event.min/1000)+'/'+Math.round(event.max/1000)+'/'+N_points,
                                        success: function(response){
                                            var text = response.responseText;
                                            data=Ext.JSON.decode(text);
                                            MyApp.app.data=data;
                                            MyApp.app.IsCandle = false;
                                            Ext.ComponentQuery.query('#Chart2Button')[0].enable(true);
                                            chart.series[0].setData([]);
                                            chart.series[1].setData([]);
                                            chart.series[2].setData([]);
                                            chart.series[3].setData([]);
                                            chart.series[4].setData([]);
                                            chart.series[5].setData([]);
                                            if (MyApp.app.IsUncorrected){
                                                chart.series[0].setData([]);
                                                chart.series[1].setData(data[0]);
                                            }
                                            if (MyApp.app.IsCorrPress){
                                                chart.series[2].setData([]);
                                                chart.series[3].setData(data[1]);
                                            }
                                            if (MyApp.app.IsCorrEffic){
                                                chart.series[4].setData([]);
                                                chart.series[5].setData(data[2]);
                                            }
                                            chart.series[6].setData(data[3]);

                                            chart.hideLoading();
                                            chart.hideLoading();

                                        },
                                        scope: this
                                    });

                                }else{
                                    Ext.Ajax.request({
                                        url:'http://localhost/apiv1/CALM/nmdb/CALM_ori/intervalHSGrouped/'+Math.round(event.min/1000)+'/'+Math.round(event.max/1000)+'/'+N_points,
                                        success: function(response){
                                            var text = response.responseText;
                                            data=Ext.JSON.decode(text);
                                            MyApp.app.data=data;
                                            MyApp.app.IsCandle = true;
                                            Ext.ComponentQuery.query('#Chart2Button')[0].disable(true);
                                            chart.series[0].setData([]);
                                            chart.series[1].setData([]);
                                            chart.series[2].setData([]);
                                            chart.series[3].setData([]);
                                            chart.series[4].setData([]);
                                            chart.series[5].setData([]);

                                            if (MyApp.app.IsUncorrected){
                                                chart.series[0].setData(data[0]);
                                                chart.series[1].setData([]);
                                            }
                                            if (MyApp.app.IsCorrPress){
                                                chart.series[2].setData(data[1]);
                                                chart.series[3].setData([]);
                                            }
                                            if (MyApp.app.IsCorrEffic){
                                                chart.series[4].setData(data[2]);
                                                chart.series[5].setData([]);
                                            }
                                            chart.series[6].setData(data[3]);

                                            chart.hideLoading();
                                            chart.hideLoading();
                                        },
                                        scope: this
                                    });
                                }


                            }
        				},
        				minRange: 1*(N_points)/*one Min*/*60*1000,
                        ordinal: false//,top:-100
        			},

        			navigator : {
        				adaptToUpdatedData: false,
        				series : {
        					data : data[0]
        				}
        			},

                    scrollbar: {
        				liveRedraw: false
        			},

        			yAxis : [{
        				title: {
                            text: 'OHLC'
                        },
        				events : {
        					afterSetExtremes : function(e){alert(e.max);}
        				},
        				top: 150,
        				height: 365,
        				min: 20,
        				max: 251
        			},{
        				title: {
                            text: 'Presure'
                        },
        				height: 100,
        				offset: 0,
        				min: 880,
        				max: 980
        			}],

        			plotOptions: {
                        column: {
                            pointPadding: 0.2,
                            borderWidth: 0
                        }
                    },

                    series:  [{
        				name : 'Uncorrected',				//0
        				type : 'candlestick',
        				data : data[0],
        				dataGrouping: {
        					enabled: false
        				}
        			},{
        				name : 'Uncorrected',				//1
        				data : null,
                        id: 'Unc',
        				dataGrouping: {
        					enabled: false
        				}
        			},{
        				name : 'Corrected for Pressure',	//2
        				type : 'candlestick',
        				data : null,
        				dataGrouping: {
        					enabled: false
        				}
        			},{
        				name : 'Corrected for Pressure',	//3
        				data : null,
        				dataGrouping: {
        					enabled: false
        				}
        			},{
        				name : 'Corrected for Efficiency',	//4
        				type : 'candlestick',
        				data : null,
        				dataGrouping: {
        					enabled: false
        				}
        			},{
        				name : 'Corrected for Efficiency',	//5
        				data : null,
        				dataGrouping: {
        					enabled: false
        				}
        			},{
        				name : 'Pressure',					//6
        				visible : true,
        				yAxis: 1,
        				data : data[3],
        				dataGrouping: {
        					enabled: false
        				}
        			}]
        });

        var series = null;
        var chart2 = new Highcharts.StockChart({
            chart: {
                renderTo: panel2.getEl().dom,
                height: panel.getHeight(),
                width: panel.getWidth()
            },
            title: {
                text: 'Hi there Spikes'
            },
            legend : {
                enabled: true
            },
            scrollbar:{
                enabled: false
            },
            navigator:{
                enabled: false
            },
            rangeSelector: {
                buttons: [],
                inputEnabled: false
            },
            yAxis:[{
                title: {
                    text: 'Values'
                }
            }],
            xAxis:{
                ordinal: false
            },
            series: [{
                name: 'ch01',
                data: series,
                tooltip: {
                    valueDecimals: 0
                },
                legendIndex: 1
            },
            {
                name: 'ch02',

                data: series,
                tooltip: {
                    valueDecimals: 0
                },
                legendIndex: 2
            },{
                name: 'ch03',

                data: series,
                tooltip: {
                    valueDecimals: 0
                },
                legendIndex: 3
            },{
                name: 'ch04',

                data: series,
                tooltip: {
                    valueDecimals: 0
                },
                legendIndex: 4
            },{
                name: 'ch05',

                data: series,
                tooltip: {
                    valueDecimals: 0
                },
                legendIndex: 5
            },{
                name: 'ch06',

                data: series,
                tooltip: {
                    valueDecimals: 0
                },
                legendIndex: 6
            },{
                name: 'ch07',

                data: series,
                tooltip: {
                    valueDecimals: 0
                },
                legendIndex: 7
            },{
                name: 'ch08',

                data: series,
                tooltip: {
                    valueDecimals: 0
                },
                legendIndex: 8
            },{
                name: 'ch09',

                data: series,
                tooltip: {
                    valueDecimals: 0
                },
                legendIndex: 9
            },{
                name: 'ch10',

                data: series,
                tooltip: {
                    valueDecimals: 0
                },
                legendIndex: 10
            },{
                name: 'ch11',

                data: series,
                tooltip: {
                    valueDecimals: 0
                },
                legendIndex: 11
            },{
                name: 'ch12',

                data: series,
                tooltip: {
                    valueDecimals: 0
                },
                legendIndex: 12
            },{
                name: 'ch13',

                data: series,
                tooltip: {
                    valueDecimals: 0
                },
                legendIndex: 13
            },{
                name: 'ch14',

                data: series,
                tooltip: {
                    valueDecimals: 0
                },
                legendIndex: 14
            },{
                name: 'ch15',

                data: series,
                tooltip: {
                    valueDecimals: 0
                },
                legendIndex: 15
            },{
                name: 'ch16',

                data: series,
                tooltip: {
                    valueDecimals: 0
                },
                legendIndex: 16
            },{
                name: 'ch17',

                data: series,
                tooltip: {
                    valueDecimals: 0
                },
                legendIndex: 17
            },{
                name: 'ch18',

                data: series,
                tooltip: {
                    valueDecimals: 0
                },
                legendIndex: 18
            }]
        });


        MyApp.app.chart=chart;
        MyApp.app.chart2=chart2;
    }

});
