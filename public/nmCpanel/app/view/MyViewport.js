/*
 * File: app/view/MyViewport.js
 *
 * This file was generated by Sencha Architect
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.view.MyViewport', {
    extend: 'Ext.container.Viewport',

    requires: [
        'MyApp.view.MyPanel6',
        'MyApp.view.MyPanel4',
        'MyApp.view.MyPanel5',
        'MyApp.view.MyPanel3',
        'Ext.button.Button',
        'Ext.menu.Menu',
        'Ext.menu.Item',
        'Ext.form.FieldContainer',
        'Ext.form.Label',
        'Ext.form.field.Date',
        'Ext.form.field.Time'
    ],

    layout: 'border',

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            items: [
                {
                    xtype: 'container',
                    region: 'north',
                    height: 72,
                    html: 'norte',
                    layout: 'fit'
                },
                {
                    xtype: 'container',
                    region: 'west',
                    itemId: 'Controls',
                    width: 150,
                    layout: 'accordion',
                    items: [
                        {
                            xtype: 'panel',
                            itemId: 'SpikeControls',
                            layout: 'fit',
                            title: 'Spike',
                            dockedItems: [
                                {
                                    xtype: 'button',
                                    handler: function(button, e) {
                                        Ext.History.add('SpikeChart');
                                    },
                                    dock: 'top',
                                    margin: '5 0 0 0',
                                    text: 'Chart'
                                },
                                {
                                    xtype: 'button',
                                    handler: function(button, e) {
                                        Ext.History.add('SpikeChart2');
                                    },
                                    dock: 'top',
                                    disabled: true,
                                    itemId: 'Chart2Button',
                                    margin: '5 0 0 0',
                                    allowDepress: false,
                                    text: 'Chart2'
                                },
                                {
                                    xtype: 'button',
                                    handler: function(button, e) {
                                        Ext.History.add('SpikeStat');
                                    },
                                    dock: 'top',
                                    margin: '5 0 0 0',
                                    text: 'Stats'
                                },
                                {
                                    xtype: 'button',
                                    dock: 'top',
                                    margin: '20 0 0 0',
                                    text: 'Choice a Series',
                                    menu: {
                                        xtype: 'menu',
                                        items: [
                                            {
                                                xtype: 'menuitem',
                                                handler: function(item, e) {
                                                    Ext.History.add('SpikeChart/Uncorrected');

                                                    MyApp.app.IsUncorrected=true;
                                                    MyApp.app.IsCorrPress=false;
                                                    MyApp.app.IsCorrEffic=false;
                                                },
                                                text: 'Incorrected'
                                            },
                                            {
                                                xtype: 'menuitem',
                                                handler: function(item, e) {
                                                    Ext.History.add('SpikeChart/Pressure');

                                                    MyApp.app.IsUncorrected=false;
                                                    MyApp.app.IsCorrPress=true;
                                                    MyApp.app.IsCorrEffic=false;
                                                },
                                                text: 'Corrected for Pressure'
                                            },
                                            {
                                                xtype: 'menuitem',
                                                handler: function(item, e) {
                                                    Ext.History.add('SpikeChart/Efficiency');

                                                    MyApp.app.IsUncorrected=false;
                                                    MyApp.app.IsCorrPress=false;
                                                    MyApp.app.IsCorrEffic=true;
                                                },
                                                text: 'Corrected for Efficiency'
                                            }
                                        ]
                                    }
                                },
                                {
                                    xtype: 'fieldcontainer',
                                    dock: 'top',
                                    itemId: 'SpikeIntervalSearch',
                                    margin: '20 0 0 0',
                                    width: 200,
                                    fieldLabel: 'Label',
                                    hideLabel: true,
                                    layout: {
                                        type: 'vbox',
                                        align: 'stretch'
                                    },
                                    items: [
                                        {
                                            xtype: 'label',
                                            text: 'From: '
                                        },
                                        {
                                            xtype: 'datefield',
                                            itemId: 'SpikeIntervalDateFrom',
                                            fieldLabel: 'From',
                                            hideLabel: true,
                                            labelWidth: 50,
                                            size: 18,
                                            format: 'Y-m-d'
                                        },
                                        {
                                            xtype: 'timefield',
                                            itemId: 'SpikeIntervalHourFrom',
                                            labelWidth: 0,
                                            size: 18,
                                            format: 'H:i:s'
                                        },
                                        {
                                            xtype: 'label',
                                            text: 'To:'
                                        },
                                        {
                                            xtype: 'datefield',
                                            itemId: 'SpikeIntervalDateTo',
                                            fieldLabel: 'To',
                                            hideLabel: true,
                                            labelWidth: 50,
                                            size: 18,
                                            format: 'Y-m-d'
                                        },
                                        {
                                            xtype: 'timefield',
                                            itemId: 'SpikeIntervalHourTo',
                                            size: 18,
                                            format: 'H:i:s'
                                        },
                                        {
                                            xtype: 'button',
                                            handler: function(button, e) {
                                                MyApp.app.chart.xAxis[0].setExtremes(
                                                this.getTimestamp(Ext.ComponentQuery.query('#Controls')[0].down('#SpikeControls').down('#SpikeIntervalSearch').down('#SpikeIntervalDateFrom').getRawValue()+' '+Ext.ComponentQuery.query('#Controls')[0].down('#SpikeControls').down('#SpikeIntervalSearch').down('#SpikeIntervalHourFrom').getRawValue()),
                                                this.getTimestamp(Ext.ComponentQuery.query('#Controls')[0].down('#SpikeControls').down('#SpikeIntervalSearch').down('#SpikeIntervalDateTo').getRawValue()+' '+Ext.ComponentQuery.query('#Controls')[0].down('#SpikeControls').down('#SpikeIntervalSearch').down('#SpikeIntervalHourTo').getRawValue()));
                                            },
                                            getTimestamp: function(str) {
                                                var d = str.match(/\d+/g); //extract date parts
                                                return +new Date(Date.UTC(d[0], d[1] - 1, d[2], d[3], d[4], d[5])); //build Date object
                                            },
                                            margin: '5 0 0 0',
                                            text: 'Search'
                                        }
                                    ]
                                }
                            ],
                            listeners: {
                                beforeexpand: {
                                    fn: me.onPanelBeforeExpand1,
                                    scope: me
                                }
                            }
                        },
                        {
                            xtype: 'panel',
                            title: 'OtherModule',
                            listeners: {
                                beforeexpand: {
                                    fn: me.onPanelBeforeExpand,
                                    scope: me
                                }
                            }
                        },
                        {
                            xtype: 'panel',
                            title: 'OtherModule',
                            listeners: {
                                beforeexpand: {
                                    fn: me.onPanelBeforeExpand2,
                                    scope: me
                                }
                            }
                        }
                    ]
                },
                {
                    xtype: 'container',
                    region: 'center',
                    itemId: 'NavigationPanel',
                    layout: 'card',
                    items: [
                        {
                            xtype: 'mypanel6'
                        },
                        {
                            xtype: 'mypanel4'
                        },
                        {
                            xtype: 'mypanel5'
                        },
                        {
                            xtype: 'mypanel3'
                        }
                    ]
                }
            ]
        });

        me.callParent(arguments);
    },

    onPanelBeforeExpand1: function(p, animate, eOpts) {
        Ext.History.add('SpikeChart');
    },

    onPanelBeforeExpand: function(p, animate, eOpts) {
        Ext.History.add('OtherModule');
    },

    onPanelBeforeExpand2: function(p, animate, eOpts) {
        Ext.History.add('OtherModule');
    }

});